package com.infocz.infoCruise.api.servive.gdb;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;

import com.infocz.infoCruise.api.security.UserDTO;

import lombok.extern.log4j.Log4j2;

@Log4j2
@Service
public class AuthService {
    public UserDetails createUser(String loginId) {
        // UserDTO userDTO = new UserDTO(loginId, loginId, "", "", true, Arrays.asList("viewer"));
        log.debug("userDTO = {}", userDTO);

        if(!userDTO.getIsUse()){
            throw new BadCredentialsException(loginId + " -> 활성화 되어있지 않습니다.");
        }

        List<GrantedAuthority> grantedAuthorities = userDTO.getAuth().stream()
                .map(authority -> new SimpleGrantedAuthority(authority))
                .collect(Collectors.toList());
        return User.builder().username(userDTO.getLoginId())
                      .password(userDTO.getUserPwd())
                      .authorities(grantedAuthorities).build();
    }
    
}
